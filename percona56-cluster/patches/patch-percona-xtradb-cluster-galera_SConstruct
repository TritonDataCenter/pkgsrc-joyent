$NetBSD$

Fix problem with 'ar' and pass RPATH properly.

--- percona-xtradb-cluster-galera/SConstruct.orig	2019-06-27 17:13:22.116554364 +0000
+++ percona-xtradb-cluster-galera/SConstruct
@@ -148,7 +148,7 @@ Export('GALERA_VER', 'GALERA_REV')
 print('Signature: version: ' + GALERA_VER + ', revision: ' + GALERA_REV)
 
 LIBBOOST_PROGRAM_OPTIONS_A = ARGUMENTS.get('bpostatic', '')
-LIBBOOST_SYSTEM_A = string.replace(LIBBOOST_PROGRAM_OPTIONS_A, 'boost_program_options', 'boost_system')
+LIBBOOST_SYSTEM_A = LIBBOOST_PROGRAM_OPTIONS_A.replace('boost_program_options', 'boost_system')
 
 #
 # Set up and export default build environment
@@ -165,6 +165,10 @@ if 'CCACHE_DIR' in os.environ:
 if 'CCACHE_CPP2' in os.environ:
     env['ENV']['CCACHE_CPP2'] = os.environ['CCACHE_CPP2']
 
+# Add support for pkgsrc cwrappers
+if 'CWRAPPERS_CONFIG_DIR' in os.environ:
+    env['ENV']['CWRAPPERS_CONFIG_DIR'] = os.environ['CWRAPPERS_CONFIG_DIR']
+
 # Set CC and CXX compilers
 cc = os.getenv('CC', 'default')
 if cc != 'default':
@@ -177,8 +181,8 @@ if link != 'default':
     env.Replace(LINK = link)
 
 # Get compiler name/version, CXX may be set to "c++" which may be clang or gcc
-cc_version = read_first_line(env['CC'].split() + ['--version'])
-cxx_version = read_first_line(env['CXX'].split() + ['--version'])
+cc_version = str(read_first_line(env['CC'].split() + ['--version']))
+cxx_version = str(read_first_line(env['CXX'].split() + ['--version']))
 
 print('Using C compiler executable: ' + env['CC'])
 print('C compiler version is: ' + cc_version)
@@ -204,6 +208,9 @@ if sysname == 'freebsd' or sysname == 's
     env.Append(CPPPATH = ['/usr/local/include'])
 if sysname == 'sunos':
    env.Replace(SHLINKFLAGS = '-shared ')
+   env.Replace(AR = 'ar')
+   env.Replace(ARFLAGS= 'r')
+   env.Replace(ARCOM = '$AR $ARFLAGS $TARGET $SOURCES')
 
 # Add paths is extra_sysroot argument was specified
 extra_sysroot = ARGUMENTS.get('extra_sysroot', '')
